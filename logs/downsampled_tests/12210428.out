learning rate: 8e-6 treshold: 0.4 batch: 7 epochs: 5
Namespace(batch=7, checkpoint='../multilabel/downsampled', epochs=5, full=False, lang='downsampled', learning=8e-06, model='sentence-transformers/paraphrase-xlm-r-multilingual-v1', multilingual=False, saved='saved_models/all_multilingual', test_set=['test_sets/main_labels_only/pt_test_modified.tsv'], train_set=['downsampled/main_labels_only/all_downsampled.tsv.gz'], treshold=0.4)
{'dev': Dataset({
    features: ['text', 'label'],
    num_rows: 1757
}),
 'test': Dataset({
    features: ['text', 'label'],
    num_rows: 332
}),
 'train': Dataset({
    features: ['text', 'label'],
    num_rows: 7027
})}
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
{'loss': 0.3443, 'learning_rate': 6.4e-06, 'epoch': 1.0}
{'eval_loss': 0.279363751411438, 'eval_f1': 0.5834901855337455, 'eval_roc_auc': 0.7370071787858299, 'eval_accuracy': 0.4473534433693796, 'eval_runtime': 17.8769, 'eval_samples_per_second': 98.283, 'eval_steps_per_second': 3.077, 'epoch': 1.0}
{'loss': 0.2595, 'learning_rate': 4.8e-06, 'epoch': 2.0}
{'eval_loss': 0.25337138772010803, 'eval_f1': 0.630221763795771, 'eval_roc_auc': 0.7688945745487327, 'eval_accuracy': 0.5122367672168469, 'eval_runtime': 18.3281, 'eval_samples_per_second': 95.864, 'eval_steps_per_second': 3.001, 'epoch': 2.0}
{'loss': 0.2253, 'learning_rate': 3.2e-06, 'epoch': 3.0}
{'eval_loss': 0.24357165396213531, 'eval_f1': 0.6531520395550062, 'eval_roc_auc': 0.7897605620095479, 'eval_accuracy': 0.5276038702333523, 'eval_runtime': 18.0785, 'eval_samples_per_second': 97.187, 'eval_steps_per_second': 3.042, 'epoch': 3.0}
{'loss': 0.2016, 'learning_rate': 1.6e-06, 'epoch': 4.0}
{'eval_loss': 0.23452556133270264, 'eval_f1': 0.6624968726544909, 'eval_roc_auc': 0.7926096346323274, 'eval_accuracy': 0.5367103016505407, 'eval_runtime': 17.8454, 'eval_samples_per_second': 98.457, 'eval_steps_per_second': 3.082, 'epoch': 4.0}
{'loss': 0.1844, 'learning_rate': 0.0, 'epoch': 5.0}
{'eval_loss': 0.23288904130458832, 'eval_f1': 0.6666666666666666, 'eval_roc_auc': 0.7986431249615834, 'eval_accuracy': 0.5446784291405805, 'eval_runtime': 18.9646, 'eval_samples_per_second': 92.646, 'eval_steps_per_second': 2.9, 'epoch': 5.0}
{'train_runtime': 1425.6123, 'train_samples_per_second': 24.646, 'train_steps_per_second': 3.521, 'train_loss': 0.24302383058099633, 'epoch': 5.0}
F1: 0.639344262295082
              precision    recall  f1-score   support

          IN       0.61      0.34      0.44        32
          NA       0.38      0.18      0.24        17
          HI       0.34      0.73      0.47        55
          LY       0.78      0.70      0.74       113
          IP       1.00      0.25      0.40         4
          SP       0.86      0.77      0.81       113
          ID       0.59      0.43      0.50        30
          OP       0.00      0.00      0.00         0

   micro avg       0.64      0.64      0.64       364
   macro avg       0.57      0.42      0.45       364
weighted avg       0.69      0.64      0.65       364
 samples avg       0.66      0.67      0.65       364

