learning rate: 8e-6 treshold: 0.5 batch: 8 epochs: 5
Namespace(batch=8, checkpoint='../multilabel/jpn', epochs=5, lang='jpn', learning=8e-06, multilingual=False, saved='saved_models/all_multilingual', test_set=['test_sets/jpn_test.tsv'], train_set=['AfterDeepL/ja_FINAL.tsv.gz'], treshold=0.5)
{'dev': Dataset({
    features: ['text', 'label'],
    num_rows: 1848
}),
 'test': Dataset({
    features: ['text', 'label'],
    num_rows: 100
}),
 'train': Dataset({
    features: ['text', 'label'],
    num_rows: 7392
})}
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
{'loss': 0.2683, 'learning_rate': 6.4e-06, 'epoch': 1.0}
{'eval_loss': 0.22453585267066956, 'eval_f1': 0.6054054054054056, 'eval_roc_auc': 0.7531932972099566, 'eval_accuracy': 0.54, 'eval_runtime': 3.2189, 'eval_samples_per_second': 31.066, 'eval_steps_per_second': 1.243, 'epoch': 1.0}
{'loss': 0.1845, 'learning_rate': 4.8e-06, 'epoch': 2.0}
{'eval_loss': 0.19146545231342316, 'eval_f1': 0.723404255319149, 'eval_roc_auc': 0.8179019654274213, 'eval_accuracy': 0.64, 'eval_runtime': 3.1498, 'eval_samples_per_second': 31.748, 'eval_steps_per_second': 1.27, 'epoch': 2.0}
{'loss': 0.1463, 'learning_rate': 3.2e-06, 'epoch': 3.0}
{'eval_loss': 0.2402486801147461, 'eval_f1': 0.6073298429319373, 'eval_roc_auc': 0.7600325946149238, 'eval_accuracy': 0.55, 'eval_runtime': 3.1546, 'eval_samples_per_second': 31.699, 'eval_steps_per_second': 1.268, 'epoch': 3.0}
{'loss': 0.1187, 'learning_rate': 1.6e-06, 'epoch': 4.0}
{'eval_loss': 0.23630258440971375, 'eval_f1': 0.6502463054187193, 'eval_roc_auc': 0.795998105612124, 'eval_accuracy': 0.59, 'eval_runtime': 3.1508, 'eval_samples_per_second': 31.738, 'eval_steps_per_second': 1.27, 'epoch': 4.0}
{'loss': 0.0975, 'learning_rate': 0.0, 'epoch': 5.0}
{'eval_loss': 0.25451481342315674, 'eval_f1': 0.6567164179104478, 'eval_roc_auc': 0.7974328258416794, 'eval_accuracy': 0.61, 'eval_runtime': 3.1455, 'eval_samples_per_second': 31.792, 'eval_steps_per_second': 1.272, 'epoch': 5.0}
{'train_runtime': 3905.6968, 'train_samples_per_second': 9.463, 'train_steps_per_second': 1.183, 'train_loss': 0.16303596826858852, 'epoch': 5.0}
F1: 0.723404255319149
              precision    recall  f1-score   support

          IN       0.80      0.40      0.53        10
          NA       0.57      1.00      0.73         4
          HI       0.63      0.80      0.71        15
          LY       0.89      0.76      0.82        33
          IP       0.00      0.00      0.00         0
          SP       0.88      0.61      0.72        36
          ID       0.00      0.00      0.00         4
          OP       1.00      1.00      1.00         1

   micro avg       0.80      0.66      0.72       103
   macro avg       0.60      0.57      0.56       103
weighted avg       0.80      0.66      0.71       103
 samples avg       0.67      0.68      0.67       103

