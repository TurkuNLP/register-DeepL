learning rate: 8e-6 treshold: 0.4 batch: 8 epochs: 5
Namespace(batch=8, checkpoint='../multilabel/spa', epochs=5, lang='spa', learning=8e-06, multilingual=False, saved='saved_models/all_multilingual', test_set=['test_sets/spa_test.tsv'], train_set=['AfterDeepL/es_FINAL.tsv.gz'], treshold=0.4)
{'dev': Dataset({
    features: ['text', 'label'],
    num_rows: 1851
}),
 'test': Dataset({
    features: ['text', 'label'],
    num_rows: 100
}),
 'train': Dataset({
    features: ['text', 'label'],
    num_rows: 7401
})}
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
{'loss': 0.2594, 'learning_rate': 6.4e-06, 'epoch': 1.0}
{'eval_loss': 0.19735005497932434, 'eval_f1': 0.711764705882353, 'eval_roc_auc': 0.8281642899249555, 'eval_accuracy': 0.5764451647757969, 'eval_runtime': 58.3953, 'eval_samples_per_second': 31.698, 'eval_steps_per_second': 0.993, 'epoch': 1.0}
{'loss': 0.1744, 'learning_rate': 4.8e-06, 'epoch': 2.0}
{'eval_loss': 0.19381847977638245, 'eval_f1': 0.7252747252747251, 'eval_roc_auc': 0.8311486612435763, 'eval_accuracy': 0.6099405726634252, 'eval_runtime': 57.7146, 'eval_samples_per_second': 32.072, 'eval_steps_per_second': 1.005, 'epoch': 2.0}
{'loss': 0.141, 'learning_rate': 3.2e-06, 'epoch': 3.0}
{'eval_loss': 0.1881009191274643, 'eval_f1': 0.7389696820310574, 'eval_roc_auc': 0.8422383541863993, 'eval_accuracy': 0.6283090221501891, 'eval_runtime': 57.7601, 'eval_samples_per_second': 32.046, 'eval_steps_per_second': 1.004, 'epoch': 3.0}
{'loss': 0.1138, 'learning_rate': 1.6e-06, 'epoch': 4.0}
{'eval_loss': 0.19498364627361298, 'eval_f1': 0.7395405078597339, 'eval_roc_auc': 0.8475824037530788, 'eval_accuracy': 0.6234467855213398, 'eval_runtime': 57.7831, 'eval_samples_per_second': 32.034, 'eval_steps_per_second': 1.004, 'epoch': 4.0}
{'loss': 0.0935, 'learning_rate': 0.0, 'epoch': 5.0}
{'eval_loss': 0.20189082622528076, 'eval_f1': 0.7451830443159924, 'eval_roc_auc': 0.8519590211943352, 'eval_accuracy': 0.6293895191788222, 'eval_runtime': 58.2128, 'eval_samples_per_second': 31.797, 'eval_steps_per_second': 0.996, 'epoch': 5.0}
{'train_runtime': 4318.5815, 'train_samples_per_second': 8.569, 'train_steps_per_second': 1.072, 'train_loss': 0.15640360788959148, 'epoch': 5.0}
F1: 0.6567164179104478
              precision    recall  f1-score   support

          IN       0.75      0.43      0.55         7
          NA       0.50      0.25      0.33         4
          HI       0.56      0.40      0.47        25
          LY       0.74      0.79      0.77        29
          IP       0.00      0.00      0.00         0
          SP       0.74      0.88      0.80        32
          ID       0.20      0.20      0.20         5
          OP       0.00      0.00      0.00         0

   micro avg       0.67      0.65      0.66       102
   macro avg       0.44      0.37      0.39       102
weighted avg       0.66      0.65      0.64       102
 samples avg       0.62      0.65      0.63       102

