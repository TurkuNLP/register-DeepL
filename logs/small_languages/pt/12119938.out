learning rate: 8e-6 treshold: 0.4 batch: 7 epochs: 5
Namespace(batch=7, checkpoint='../multilabel/pt', epochs=5, lang='pt', learning=8e-06, multilingual=False, saved='saved_models/all_multilingual', test_set=['test_sets/pt_test_modified.tsv'], train_set=['AfterDeepL/pt_FINAL.tsv.gz'], treshold=0.4)
{'dev': Dataset({
    features: ['text', 'label'],
    num_rows: 1851
}),
 'test': Dataset({
    features: ['text', 'label'],
    num_rows: 332
}),
 'train': Dataset({
    features: ['text', 'label'],
    num_rows: 7404
})}
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
{'loss': 0.2506, 'learning_rate': 6.4e-06, 'epoch': 1.0}
{'eval_loss': 0.19763384759426117, 'eval_f1': 0.7148269765092194, 'eval_roc_auc': 0.8233090985234239, 'eval_accuracy': 0.5942733657482442, 'eval_runtime': 57.198, 'eval_samples_per_second': 32.361, 'eval_steps_per_second': 1.014, 'epoch': 1.0}
{'loss': 0.1694, 'learning_rate': 4.8e-06, 'epoch': 2.0}
{'eval_loss': 0.18205468356609344, 'eval_f1': 0.7416563658838071, 'eval_roc_auc': 0.8438111732860553, 'eval_accuracy': 0.6266882766072394, 'eval_runtime': 57.2402, 'eval_samples_per_second': 32.337, 'eval_steps_per_second': 1.013, 'epoch': 2.0}
{'loss': 0.133, 'learning_rate': 3.2e-06, 'epoch': 3.0}
{'eval_loss': 0.18943294882774353, 'eval_f1': 0.7431457431457431, 'eval_roc_auc': 0.8520170227322231, 'eval_accuracy': 0.6169638033495408, 'eval_runtime': 57.286, 'eval_samples_per_second': 32.312, 'eval_steps_per_second': 1.012, 'epoch': 3.0}
{'loss': 0.1025, 'learning_rate': 1.6e-06, 'epoch': 4.0}
{'eval_loss': 0.1982419192790985, 'eval_f1': 0.7446300715990454, 'eval_roc_auc': 0.8549747199898501, 'eval_accuracy': 0.6110210696920584, 'eval_runtime': 57.234, 'eval_samples_per_second': 32.341, 'eval_steps_per_second': 1.013, 'epoch': 4.0}
{'loss': 0.0804, 'learning_rate': 0.0, 'epoch': 5.0}
{'eval_loss': 0.2082524448633194, 'eval_f1': 0.7509746588693956, 'eval_roc_auc': 0.8530128496079085, 'eval_accuracy': 0.6320907617504052, 'eval_runtime': 59.0825, 'eval_samples_per_second': 31.329, 'eval_steps_per_second': 0.982, 'epoch': 5.0}
{'train_runtime': 4256.45, 'train_samples_per_second': 8.697, 'train_steps_per_second': 1.243, 'train_loss': 0.1471818372297377, 'epoch': 5.0}
F1: 0.6829268292682927
              precision    recall  f1-score   support

          IN       0.62      0.47      0.54        32
          NA       0.62      0.29      0.40        17
          HI       0.42      0.65      0.51        55
          LY       0.83      0.70      0.76       113
          IP       0.50      0.25      0.33         4
          SP       0.77      0.88      0.82       113
          ID       0.57      0.53      0.55        30
          OP       0.00      0.00      0.00         0

   micro avg       0.67      0.69      0.68       364
   macro avg       0.54      0.47      0.49       364
weighted avg       0.70      0.69      0.68       364
 samples avg       0.69      0.71      0.69       364

