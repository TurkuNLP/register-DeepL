learning rate: 5e-6 treshold: 0.3 batch: 7 epochs: 3
Namespace(batch=7, checkpoint='../multilabel/chi', epochs=3, lang='chi', learning=5e-06, multilingual=False, saved='saved_models/all_multilingual', test_set=['test_sets/chi_all.tsv'], train_set=['AfterDeepL/main_labels_only/chi_FINAL.modified.tsv.gz'], treshold=0.3)
{'dev': Dataset({
    features: ['text', 'label'],
    num_rows: 1752
}),
 'test': Dataset({
    features: ['text', 'label'],
    num_rows: 317
}),
 'train': Dataset({
    features: ['text', 'label'],
    num_rows: 7004
})}
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
{'loss': 0.2724, 'learning_rate': 3.3333333333333333e-06, 'epoch': 1.0}
{'eval_loss': 0.21091537177562714, 'eval_f1': 0.71499176276771, 'eval_roc_auc': 0.8358961612637212, 'eval_accuracy': 0.5468036529680366, 'eval_runtime': 53.9774, 'eval_samples_per_second': 32.458, 'eval_steps_per_second': 1.019, 'epoch': 1.0}
{'loss': 0.186, 'learning_rate': 1.6666666666666667e-06, 'epoch': 2.0}
{'eval_loss': 0.1993112564086914, 'eval_f1': 0.7314601566098572, 'eval_roc_auc': 0.8513573147324901, 'eval_accuracy': 0.5684931506849316, 'eval_runtime': 53.8247, 'eval_samples_per_second': 32.55, 'eval_steps_per_second': 1.022, 'epoch': 2.0}
{'loss': 0.1572, 'learning_rate': 0.0, 'epoch': 3.0}
{'eval_loss': 0.19205234944820404, 'eval_f1': 0.7471922988769195, 'eval_roc_auc': 0.862261979671661, 'eval_accuracy': 0.5844748858447488, 'eval_runtime': 53.8002, 'eval_samples_per_second': 32.565, 'eval_steps_per_second': 1.022, 'epoch': 3.0}
{'train_runtime': 2390.0263, 'train_samples_per_second': 8.792, 'train_steps_per_second': 1.256, 'train_loss': 0.2051914658421006, 'epoch': 3.0}
F1: 0.6350067842605156
              precision    recall  f1-score   support

          IN       0.25      0.42      0.31        12
          NA       0.46      0.75      0.57         8
          HI       0.41      0.93      0.57        68
          LY       0.79      0.63      0.71       115
          IP       0.40      0.67      0.50         3
          SP       0.82      0.77      0.80        97
          ID       0.48      0.27      0.34        37
          OP       0.00      0.00      0.00         1

   micro avg       0.59      0.69      0.64       341
   macro avg       0.45      0.55      0.48       341
weighted avg       0.66      0.69      0.65       341
 samples avg       0.62      0.71      0.64       341

